@using App.Data;
@using App.Models;
@using KizspyWebApp.Models;
@using KizspyWebApp.ViewModels;
@model ProductModel
@{
    ViewData["Title"] = "Home Page";
    //get categories from controller
    var categories = ViewBag.Categories;
    //thêm dấu phẩy vào giá tiền để dễ nhìn
}
@* <partial name="_AlertMessage"/>
<div class="text-center">
    <h1 class="display-4">Xin Chào</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div> *@
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<div class="d-flex flex-column flex-lg-row">
    <div class="flex-column flex-lg-row-auto w-100 w-lg-250px w-xl-300px mb-10 order-1 order-lg-2">

        <div class="card card-flush pt-3 mb-0" data-kt-sticky="true" data-kt-sticky-name="subscription-summary" data-kt-sticky-offset="{default: false, lg: '200px'}" data-kt-sticky-width="{lg: '250px', xl: '300px'}" data-kt-sticky-left="auto" data-kt-sticky-top="150px" data-kt-sticky-animation="false" data-kt-sticky-zindex="95" style="">

            <div class="card-header">

                <div class="card-title">
                    <h2>Categories</h2>
                </div>

            </div>

            <div class="card-body pt-0 fs-6">
                <ul>
                    @foreach (var item in categories)
                    {

                        <li>
                            <div class="form-check form-check-custom form-check-solid m-3">
                                <input class="form-check-input" name="categories" type="checkbox" value="@item.Id" id="category-@item.Id" />
                                <label for="category-@item.Id" class="form-check-label" for="flexCheckDefault">
                                    @item.CategoryName
                                </label>
                            </div>
                        </li>

                    }
                </ul>
            </div>

        </div>

    </div>

    <div class="flex-lg-row-fluid me-lg-15 order-2 order-lg-1 mb-10 mb-lg-0">

        <div class="card">
            <div class="card-body p-lg-17">
                <div class="row" id="product-list">
                    @foreach(var item in Model.products)
                    {
                        <div class="col-md-4 h-full">
                            <div class="card card-flush mb-4 box-shadow">
                                <img class="card-img-top" alt="Thumbnail [100%x225]" style="height: 200px; width: 100%; display: block;" src="@item.Image" data-holder-rendered="true">
                                <div class="card-body">
                                    <div class="card-detail d-flex justify-content-between align-items-baseline pt-3">
                                        <h4 class="card-title text-uppercase" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;" data-bs-toggle="tooltip" title="" data-kt-action="product_remove" data-bs-original-title="@item.Name">
                                            <span>@item.Name</span>
                                        </h4>
                                    </div>
                                    <div class="card-detail d-flex justify-content-between align-items-baseline pt-3">
                                        <span class="card-text text-uppercase">
                                            <span style="background: url(/16066101745881.gif)">@string.Format("{0:c0}", item.Price)</span>
                                        </span>
                                        <span>vnđ</span>
                                    </div>
                                    
                                </div>
                                <div class="card-footer">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="btn-group">
                                            <a asp-action="Details" asp-controller="Products" asp-route-Id="@item.Id" type="button" class="btn btn-sm badge badge-success">Detail</a>
                                        </div>
                                        <a href="@item.Id" onclick="AddCartItem(event)" type="button" class="btn btn-sm badge badge-danger">Add Cart</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="card-footer">
                <div class="d-flex justify-content-center">
                    @{
                        var pagingmodel = new PagingModel()
                            {
                                currentpage = Model.currentPage,
                                countpages = Model.countPages,
                                generateUrl = (int? page) => Url.Action("Index", new { page = page })
                            };
                    }
                    <partial name="_PagingXTL" model="@pagingmodel" />
                </div>
            </div>
        </div>

    </div>

</div>
<script>
    //Add to cart function
    function AddCartItem(event) {
        event.preventDefault();
        var id = event.currentTarget.getAttribute('href').split('/').pop();
        $.ajax({
            url: '/Cart/AddProductToCart',
            type: 'Post',
            data: { productId: id },
            dataType: 'json',
            success: function (data) {
                toastr.options = {
                    "closeButton": true,
                    "debug": false,
                    "newestOnTop": false,
                    "progressBar": true,
                    "positionClass": "toast-top-right",
                    "preventDuplicates": false,
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "timeOut": "5000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                };
                toastr.success("Product added to cart successfully");
                console.log(data);
            },
            error: function (error) {
                toastr.options = {
                    "closeButton": true,
                    "debug": false,
                    "newestOnTop": false,
                    "progressBar": true,
                    "positionClass": "toast-top-right",
                    "preventDuplicates": false,
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "timeOut": "5000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                };
                toastr.error(error.responseText);
            }
        });
    }
    var filteredProductsUrl = '@Url.Action("GetFilteredProducts", "Home")';
    $('input[type="checkbox"][name="categories"]').on('change', function () {
        var selectedCategories = $('input[type="checkbox"][name="categories"]:checked').map(function () {
            return $(this).val();
        }).get();
        $.ajax({
            url: filteredProductsUrl,
            type: 'POST',
            data: { categoriesId: selectedCategories },
            dataType: 'html',
            success: function (data) {
                $('#product-list').html(data);
            }
        });
});
</script>