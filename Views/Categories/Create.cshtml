@model KizspyWebApp.Models.Category

@{
    ViewData["Title"] = "Create";
}
<div class="card p-3">
    <div class="card-body pt-0">
        <h1>Create</h1>

        <h4>Category</h4>
        <hr />
        <div class="row">
            <div class="col-md-4">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="CategoryName" class="control-label"></label>
                        <input asp-for="CategoryName" class="form-control" />
                        <span asp-validation-for="CategoryName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input onclick="create(event)" type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>

        <div>
            <a asp-action="Index">Back to List</a>
        </div>
    </div>
</div>
<script>
    function create(e) {
        e.preventDefault();
        var form = e.target.form;
        var formData = new FormData(form);
        $.ajax({
            url: form.action,
            type: form.method,
            data: formData,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data.success) {
                    Swal.fire({
                        title: "Created!",
                        text: data.message,
                        icon: "success",
                        buttonsStyling: false,
                        confirmButtonText: "Ok, got it!",
                        customClass: {
                            confirmButton: "btn fw-bold btn-light-primary"
                        }
                    }).then(function () {
                        window.location.href = '/Categories/Index';
                    });
                }
                else {
                    toastr.options = {
                        "closeButton": false,
                        "debug": false,
                        "newestOnTop": true,
                        "progressBar": true,
                        "positionClass": "toast-top-right",
                        "preventDuplicates": false,
                        "showDuration": "300",
                        "hideDuration": "1000",
                        "timeOut": "5000",
                        "extendedTimeOut": "1000",
                        "showEasing": "swing",
                        "hideEasing": "linear",
                        "showMethod": "fadeIn",
                        "hideMethod": "fadeOut"
                    };
                    data.message.forEach((error) => {
                        toastr.error(error.errorMessage);
                    });
                }
            }
        });
    }
</script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
