@using App.Data;
@using App.Models;
@using KizspyWebApp.Models;
@using Microsoft.AspNetCore.Identity;

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> userManager
@model IEnumerable<Product>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>


<form asp-action="Index" method="get" class="form-inline">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" />
            |
            <a asp-action="Index">Back to Full List</a> |
            <a asp-action="Create">Create New</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(model => model.Name)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]">@Html.DisplayNameFor(model => model.Price)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["QtySortParm"]">@Html.DisplayNameFor(model => model.Qty)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Categories)
            </th>
            @* <th>
                @Html.DisplayNameFor(model => model.Image)
            </th> *@
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Qty)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @* display categories name *@
                    @foreach (var category in item.Categories)
                    {
                        @category.CategoryName <br />
                    }
                </td>
                @* <td>
                    <img class="card-img-top" src="@item.Image" width="100px" height="100px" alt="Card image cap">
                </td> *@
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @* Role admin and Manager can edit and delete *@
                    @if (SignInManager.IsSignedIn(User) && (User.IsInRole(RoleName.Administrator) || User.IsInRole(RoleName.Editor)))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    }
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    @if (SignInManager.IsSignedIn(User) && (User.IsInRole(RoleName.Administrator) || User.IsInRole(RoleName.Editor)))
                    {
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
