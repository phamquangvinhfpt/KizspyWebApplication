@using App.Data;
@using App.Models;
@using KizspyWebApp.Models;
@using Microsoft.AspNetCore.Identity;

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> userManager
@model IEnumerable<Product>

@{
    ViewData["Title"] = "Index";
}
<link href="assets/plugins/custom/datatables/datatables.bundle.css" rel="stylesheet" type="text/css" />
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="assets/plugins/custom/datatables/datatables.bundle.js"></script>
<div class="card p-3">
    <div class="card-body pt-0">
        <div class="d-flex flex-stack mb-5">
            <!--begin::Search-->
            <div class="d-flex align-items-center position-relative my-1">
                <span class="svg-icon svg-icon-primary svg-icon-2x">
                    <!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2021-05-14-112058/theme/html/demo8/dist/../src/media/svg/icons/General/Search.svg-->
                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                        <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                            <rect x="0" y="0" width="24" height="24" />
                            <path d="M14.2928932,16.7071068 C13.9023689,16.3165825 13.9023689,15.6834175 14.2928932,15.2928932 C14.6834175,14.9023689 15.3165825,14.9023689 15.7071068,15.2928932 L19.7071068,19.2928932 C20.0976311,19.6834175 20.0976311,20.3165825 19.7071068,20.7071068 C19.3165825,21.0976311 18.6834175,21.0976311 18.2928932,20.7071068 L14.2928932,16.7071068 Z" fill="#000000" fill-rule="nonzero" opacity="0.3" />
                            <path d="M11,16 C13.7614237,16 16,13.7614237 16,11 C16,8.23857625 13.7614237,6 11,6 C8.23857625,6 6,8.23857625 6,11 C6,13.7614237 8.23857625,16 11,16 Z M11,18 C7.13400675,18 4,14.8659932 4,11 C4,7.13400675 7.13400675,4 11,4 C14.8659932,4 18,7.13400675 18,11 C18,14.8659932 14.8659932,18 11,18 Z" fill="#000000" fill-rule="nonzero" />
                        </g>
                    </svg><!--end::Svg Icon-->
                </span>
                <input type="text" data-kt-docs-table-filter="search" class="form-control form-control-solid w-250px ps-15" placeholder="Search Products" />
            </div>
            <!--end::Search-->
            <!--begin::Toolbar-->
            <div class="d-flex justify-content-end" data-kt-docs-table-toolbar="base">
                <!--begin::Filter-->
                <button type="button" class="btn btn-light-primary me-3" data-bs-toggle="tooltip">
                    <span class="svg-icon svg-icon-primary svg-icon-2x">
                        <!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2021-05-14-112058/theme/html/demo8/dist/../src/media/svg/icons/Text/Filter.svg-->
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                            <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                <rect x="0" y="0" width="24" height="24" />
                                <path d="M5,4 L19,4 C19.2761424,4 19.5,4.22385763 19.5,4.5 C19.5,4.60818511 19.4649111,4.71345191 19.4,4.8 L14,12 L14,20.190983 C14,20.4671254 13.7761424,20.690983 13.5,20.690983 C13.4223775,20.690983 13.3458209,20.6729105 13.2763932,20.6381966 L10,19 L10,12 L4.6,4.8 C4.43431458,4.5790861 4.4790861,4.26568542 4.7,4.1 C4.78654809,4.03508894 4.89181489,4 5,4 Z" fill="#000000" />
                            </g>
                        </svg><!--end::Svg Icon-->
                    </span>
                    Filter
                </button>
                <!--end::Filter-->
                <!--begin::Add customer-->
                @if (User.Identity.IsAuthenticated && (User.IsInRole(RoleName.Administrator) || User.IsInRole(RoleName.Editor)))
                {
                    <a asp-action="Create" asp-controller="Products" type="button" class="btn btn-primary" data-bs-toggle="tooltip">
                        <span class="svg-icon svg-icon-primary svg-icon-2x">
                            <!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2021-05-14-112058/theme/html/demo8/dist/../src/media/svg/icons/Navigation/Plus.svg-->
                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                    <rect fill="#000000" x="4" y="11" width="16" height="2" rx="1" />
                                    <rect fill="#000000" opacity="0.3" transform="translate(12.000000, 12.000000) rotate(-270.000000) translate(-12.000000, -12.000000) " x="4" y="11" width="16" height="2" rx="1" />
                                </g>
                            </svg><!--end::Svg Icon-->
                        </span>
                        Add Product
                    </a>
                }
                <!--end::Add customer-->
            </div>
            <!--end::Toolbar-->
            <!--begin::Group actions-->
            <div class="d-flex justify-content-end align-items-center d-none" data-kt-docs-table-toolbar="selected">
                <div class="fw-bolder me-5">
                    <span class="me-2" data-kt-docs-table-select="selected_count"></span> Selected
                </div>

                <button type="button" class="btn btn-danger" data-bs-toggle="tooltip" title="Coming Soon">
                    Selection Action
                </button>
            </div>
            <!--end::Group actions-->
        </div>
        <table id="example" class="display" style="width:100%">
            <thead>
                <tr>
                    <th></th>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Qty)
                    </th>
                    @* <th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th> *@
                    <th>
                        @Html.DisplayNameFor(model => model.Image)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    @* <th>
                        @Html.DisplayNameFor(model => model.Categories)
                    </th> *@
                    
                    <th>Action</th>
                    
                </tr>
            </thead>
        </table>
    </div>
</div>
<script>
    @* role check *@
    var isAuthenticated = @User.Identity.IsAuthenticated.ToString().ToLower();
    var isAdmin = @User.IsInRole(RoleName.Administrator).ToString().ToLower();
    var isEditor = @User.IsInRole(RoleName.Editor).ToString().ToLower();
    var isMember = @User.IsInRole(RoleName.Member).ToString().ToLower();
    var table = new DataTable('#example', {
        ajax: {
            url: '/Products/GetProducts',
            type: 'Post',
            dataType: 'json',
            dataSrc: ''
        },
        columns: [
            { data: 'id',
              visible: false,
              searchable: false
            },
            { data: 'name',
              width: '20%'
            },
            { data: 'price' },
            { data: 'qty' }@* ,
            {
                data: 'description',
                render: function (data) {
                    return '<div class="rounded border d-flex flex-column p-10">' +
                        '<label for="" class="form-label">Description</label>' +
                        '<textarea class="form-control" data-kt-autosize="true" readonly>' + data + '</textarea>' +
                        '</div>';
                }
            } *@,
            {
                data: 'image',
                width: '15%',
                render: function (data, type, row) {
                    return '<div class="card  overlay overflow-hidden">' +
                        '<div class="card-body p-0">' +
                        '<div class="overlay-wrapper">' +
                        '<img src="' + data + '" alt="" width="150px" height="100px" class="w-100 rounded"/>' +
                        '</div>' +
                        '<div class="overlay-layer bg-dark bg-opacity-25">' +
                        '<a href="/Products/Details/' + row.id + '" class="btn btn-primary btn-shadow btn-sm">Explore</a>' +
                        '<a href="' + row.id + '" onclick="AddCartItem(event)" class="btn btn-light-primary btn-shadow btn-sm ms-2">Purchase</a>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                }
            },
            {
                data: 'status',
                render: function (data){
                    if (data) {
                        return '<span class="badge badge-light-success">Active</span>';
                    }
                    else {
                        return '<span class="badge badge-light-danger">Inactive</span>';
                    }
                }
            }@* ,
            {
                data: 'categories',
                render: function (data) {
                    var html = '';
                    data.forEach(function (item) {
                        html += '<span class="badge badge-light-primary">' + item.categoryName + '</span>';
                    });
                return html;
                }
            } *@,
            {
                data: 'id',
                render: function (data) {
                    return '<a href="/Products/Edit/' + data + '" class="btn btn-sm btn-clean btn-icon" title="Edit details">' +
                        '<span class="svg-icon svg-icon-3">' +
                        '<i class="fas fa-edit"></i>' +
                        '</span>' +
                        '</a>' +
                        '<a href="/Products/Delete/' + data + '" onclick="deleteProduct(event)" class="btn btn-sm btn-clean btn-icon" title="Delete">' +
                        '<span class="svg-icon svg-icon-3">' +
                        '<i class="fas fa-trash"></i>' +
                        '</span>' +
                        '</a>';
                },
                visible: isAuthenticated && (isAdmin || isEditor),
                searchable: false,
            }
        ]
    });

    //delete function
    function deleteProduct(event) {
        event.preventDefault();
        //get id from row
        var id = event.currentTarget.getAttribute('href').split('/').pop();
        //swal alert to confirm delete
        swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, delete it!"
        }).then(function (result) {
            if (result.isConfirmed) {
                //call delete action
                $.ajax({
                    url: '/Products/Delete/' + id,
                    type: 'Post',
                    success: function (data) {
                        if (data.success) {
                            Swal.fire({
                                title: "Deleted!",
                                text: data.message,
                                icon: "success",
                                buttonsStyling: false,
                                confirmButtonText: "Ok, got it!",
                                customClass: {
                                    confirmButton: "btn fw-bold btn-light-primary"
                                }
                            }).then(function () {
                                window.location.href = '/Products/Index';
                            });
                        }
                        else {
                            Swal.fire({
                                title: "Error!",
                                text: data.message,
                                icon: "error",
                                buttonsStyling: false,
                                confirmButtonText: "Ok, got it!",
                                customClass: {
                                    confirmButton: "btn fw-bold btn-light-primary"
                                }
                            });
                        }
                    }
                });
            }
        });
    }

    //search function
    $('[data-kt-docs-table-filter="search"]').on('keyup', function () {
        table.search($(this).val()).draw();
    });

    //filter function, click show categories button to show filter
$('[data-kt-docs-table-filter="filter"]').on('click', function () {
        $(this).addClass('active');
        $('[data-kt-docs-table-filter="filter"]').not(this).removeClass('active');
        $('[data-kt-docs-table-filter="form"]').addClass('d-none');
        $('[data-kt-docs-table-filter="form"]').not('[data-kt-docs-table-filter="form"][data-kt-docs-table-filter="form=' + $(this).attr('data-kt-docs-table-filter') + '"]').removeClass('d-none');
    });

//filter function, click filter button to filter
$('[data-kt-docs-table-filter="filter"]').on('click', function () {
        var filter = $(this).attr('data-kt-docs-table-filter');
        var value = $(this).attr('data-kt-docs-table-filter-value');
        table.column(filter + ':name').search(value).draw();
    });

    //Add to cart function
    function AddCartItem(event) {
        event.preventDefault();
        var id = event.currentTarget.getAttribute('href').split('/').pop();
        $.ajax({
            url: '/Cart/AddProductToCart',
            type: 'Post',
            data: { productId: id },
            dataType: 'json',
            success: function (data) {
                console.log(data);
            }
        });
    }
</script>